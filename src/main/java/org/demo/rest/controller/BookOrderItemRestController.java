/*
 * Created on 3 avr. 2014 ( Time 19:39:49 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.BookOrderItem;
import org.demo.business.service.BookOrderItemService;
import org.demo.web.listitem.BookOrderItemListItem;

/**
 * Spring MVC controller for 'BookOrderItem' management.
 */
@Controller
public class BookOrderItemRestController {

	@Resource
	private BookOrderItemService bookOrderItemService;
	
	@RequestMapping( value="/items/bookOrderItem",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<BookOrderItemListItem> findAllAsListItems() {
		List<BookOrderItem> list = bookOrderItemService.findAll();
		List<BookOrderItemListItem> items = new LinkedList<BookOrderItemListItem>();
		for ( BookOrderItem bookOrderItem : list ) {
			items.add(new BookOrderItemListItem( bookOrderItem ) );
		}
		return items;
	}
	
	@RequestMapping( value="/bookOrderItem",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<BookOrderItem> findAll() {
		return bookOrderItemService.findAll();
	}

	@RequestMapping( value="/bookOrderItem/{bookOrderId}/{bookId}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public BookOrderItem findOne(@PathVariable("bookOrderId") Integer bookOrderId, @PathVariable("bookId") Integer bookId) {
		return bookOrderItemService.findById(bookOrderId, bookId);
	}
	
	@RequestMapping( value="/bookOrderItem",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public BookOrderItem create(@RequestBody BookOrderItem bookOrderItem) {
		return bookOrderItemService.create(bookOrderItem);
	}

	@RequestMapping( value="/bookOrderItem/{bookOrderId}/{bookId}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public BookOrderItem update(@PathVariable("bookOrderId") Integer bookOrderId, @PathVariable("bookId") Integer bookId, @RequestBody BookOrderItem bookOrderItem) {
		return bookOrderItemService.update(bookOrderItem);
	}

	@RequestMapping( value="/bookOrderItem/{bookOrderId}/{bookId}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("bookOrderId") Integer bookOrderId, @PathVariable("bookId") Integer bookId) {
		bookOrderItemService.delete(bookOrderId, bookId);
	}
	
}
