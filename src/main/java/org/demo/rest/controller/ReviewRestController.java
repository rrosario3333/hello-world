/*
 * Created on 3 avr. 2014 ( Time 19:39:50 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.Review;
import org.demo.business.service.ReviewService;
import org.demo.web.listitem.ReviewListItem;

/**
 * Spring MVC controller for 'Review' management.
 */
@Controller
public class ReviewRestController {

	@Resource
	private ReviewService reviewService;
	
	@RequestMapping( value="/items/review",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ReviewListItem> findAllAsListItems() {
		List<Review> list = reviewService.findAll();
		List<ReviewListItem> items = new LinkedList<ReviewListItem>();
		for ( Review review : list ) {
			items.add(new ReviewListItem( review ) );
		}
		return items;
	}
	
	@RequestMapping( value="/review",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Review> findAll() {
		return reviewService.findAll();
	}

	@RequestMapping( value="/review/{customerCode}/{bookId}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Review findOne(@PathVariable("customerCode") String customerCode, @PathVariable("bookId") Integer bookId) {
		return reviewService.findById(customerCode, bookId);
	}
	
	@RequestMapping( value="/review",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Review create(@RequestBody Review review) {
		return reviewService.create(review);
	}

	@RequestMapping( value="/review/{customerCode}/{bookId}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Review update(@PathVariable("customerCode") String customerCode, @PathVariable("bookId") Integer bookId, @RequestBody Review review) {
		return reviewService.update(review);
	}

	@RequestMapping( value="/review/{customerCode}/{bookId}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("customerCode") String customerCode, @PathVariable("bookId") Integer bookId) {
		reviewService.delete(customerCode, bookId);
	}
	
}
