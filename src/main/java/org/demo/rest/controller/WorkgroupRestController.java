/*
 * Created on 3 avr. 2014 ( Time 19:39:50 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.Workgroup;
import org.demo.business.service.WorkgroupService;
import org.demo.web.listitem.WorkgroupListItem;

/**
 * Spring MVC controller for 'Workgroup' management.
 */
@Controller
public class WorkgroupRestController {

	@Resource
	private WorkgroupService workgroupService;
	
	@RequestMapping( value="/items/workgroup",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<WorkgroupListItem> findAllAsListItems() {
		List<Workgroup> list = workgroupService.findAll();
		List<WorkgroupListItem> items = new LinkedList<WorkgroupListItem>();
		for ( Workgroup workgroup : list ) {
			items.add(new WorkgroupListItem( workgroup ) );
		}
		return items;
	}
	
	@RequestMapping( value="/workgroup",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Workgroup> findAll() {
		return workgroupService.findAll();
	}

	@RequestMapping( value="/workgroup/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Workgroup findOne(@PathVariable("id") Short id) {
		return workgroupService.findById(id);
	}
	
	@RequestMapping( value="/workgroup",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Workgroup create(@RequestBody Workgroup workgroup) {
		return workgroupService.create(workgroup);
	}

	@RequestMapping( value="/workgroup/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Workgroup update(@PathVariable("id") Short id, @RequestBody Workgroup workgroup) {
		return workgroupService.update(workgroup);
	}

	@RequestMapping( value="/workgroup/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Short id) {
		workgroupService.delete(id);
	}
	
}
