/*
 * Created on 3 avr. 2014 ( Time 19:39:49 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.Book;
import org.demo.business.service.BookService;
import org.demo.web.listitem.BookListItem;

/**
 * Spring MVC controller for 'Book' management.
 */
@Controller
public class BookRestController {

	@Resource
	private BookService bookService;
	
	@RequestMapping( value="/items/book",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<BookListItem> findAllAsListItems() {
		List<Book> list = bookService.findAll();
		List<BookListItem> items = new LinkedList<BookListItem>();
		for ( Book book : list ) {
			items.add(new BookListItem( book ) );
		}
		return items;
	}
	
	@RequestMapping( value="/book",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Book> findAll() {
		return bookService.findAll();
	}

	@RequestMapping( value="/book/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Book findOne(@PathVariable("id") Integer id) {
		return bookService.findById(id);
	}
	
	@RequestMapping( value="/book",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Book create(@RequestBody Book book) {
		return bookService.create(book);
	}

	@RequestMapping( value="/book/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Book update(@PathVariable("id") Integer id, @RequestBody Book book) {
		return bookService.update(book);
	}

	@RequestMapping( value="/book/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		bookService.delete(id);
	}
	
}
