/*
 * Created on 3 avr. 2014 ( Time 19:39:50 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.Shop;
import org.demo.business.service.ShopService;
import org.demo.web.listitem.ShopListItem;

/**
 * Spring MVC controller for 'Shop' management.
 */
@Controller
public class ShopRestController {

	@Resource
	private ShopService shopService;
	
	@RequestMapping( value="/items/shop",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ShopListItem> findAllAsListItems() {
		List<Shop> list = shopService.findAll();
		List<ShopListItem> items = new LinkedList<ShopListItem>();
		for ( Shop shop : list ) {
			items.add(new ShopListItem( shop ) );
		}
		return items;
	}
	
	@RequestMapping( value="/shop",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Shop> findAll() {
		return shopService.findAll();
	}

	@RequestMapping( value="/shop/{code}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Shop findOne(@PathVariable("code") String code) {
		return shopService.findById(code);
	}
	
	@RequestMapping( value="/shop",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Shop create(@RequestBody Shop shop) {
		return shopService.create(shop);
	}

	@RequestMapping( value="/shop/{code}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Shop update(@PathVariable("code") String code, @RequestBody Shop shop) {
		return shopService.update(shop);
	}

	@RequestMapping( value="/shop/{code}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("code") String code) {
		shopService.delete(code);
	}
	
}
