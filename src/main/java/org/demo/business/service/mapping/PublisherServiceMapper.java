/*
 * Created on 3 avr. 2014 ( Time 19:39:43 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.demo.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.demo.bean.Publisher;
import org.demo.bean.jpa.PublisherEntity;
import org.demo.bean.jpa.CountryEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class PublisherServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public PublisherServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'PublisherEntity' to 'Publisher'
	 * @param publisherEntity
	 */
	public Publisher mapPublisherEntityToPublisher(PublisherEntity publisherEntity) {
		if(publisherEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Publisher publisher = map(publisherEntity, Publisher.class);

		//--- Link mapping ( link to Country )
		if(publisherEntity.getCountry() != null) {
			publisher.setCountryCode(publisherEntity.getCountry().getCode());
		}
		return publisher;
	}
	
	/**
	 * Mapping from 'Publisher' to 'PublisherEntity'
	 * @param publisher
	 * @param publisherEntity
	 */
	public void mapPublisherToPublisherEntity(Publisher publisher, PublisherEntity publisherEntity) {
		if(publisher == null) {
			return;
		}

		//--- Generic mapping 
		map(publisher, publisherEntity);

		//--- Link mapping ( link : publisher )
		if( hasLinkToCountry(publisher) ) {
			CountryEntity country1 = new CountryEntity();
			country1.setCode( publisher.getCountryCode() );
			publisherEntity.setCountry( country1 );
		} else {
			publisherEntity.setCountry( null );
		}

	}
	
	/**
	 * Verify that Country id is valid.
	 * @param Country Country
	 * @return boolean
	 */
	private boolean hasLinkToCountry(Publisher publisher) {
		if(publisher.getCountryCode() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}