/*
 * Created on 3 avr. 2014 ( Time 19:39:42 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.Country;
import org.demo.bean.jpa.CountryEntity;
import java.util.List;
import org.demo.business.service.CountryService;
import org.demo.business.service.mapping.CountryServiceMapper;
import org.demo.data.repository.jpa.CountryJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of CountryService
 */
@Component
@Transactional
public class CountryServiceImpl implements CountryService {

	@Resource
	private CountryJpaRepository countryJpaRepository;

	@Resource
	private CountryServiceMapper countryServiceMapper;
	
	@Override
	public Country findById(String code) {
		CountryEntity countryEntity = countryJpaRepository.findOne(code);
		return countryServiceMapper.mapCountryEntityToCountry(countryEntity);
	}

	@Override
	public List<Country> findAll() {
		Iterable<CountryEntity> entities = countryJpaRepository.findAll();
		List<Country> beans = new ArrayList<Country>();
		for(CountryEntity countryEntity : entities) {
			beans.add(countryServiceMapper.mapCountryEntityToCountry(countryEntity));
		}
		return beans;
	}

	@Override
	public Country save(Country country) {
		return update(country) ;
	}

	@Override
	public Country create(Country country) {
		CountryEntity countryEntity = countryJpaRepository.findOne(country.getCode());
		if( countryEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		countryEntity = new CountryEntity();
		countryServiceMapper.mapCountryToCountryEntity(country, countryEntity);
		CountryEntity countryEntitySaved = countryJpaRepository.save(countryEntity);
		return countryServiceMapper.mapCountryEntityToCountry(countryEntitySaved);
	}

	@Override
	public Country update(Country country) {
		CountryEntity countryEntity = countryJpaRepository.findOne(country.getCode());
		countryServiceMapper.mapCountryToCountryEntity(country, countryEntity);
		CountryEntity countryEntitySaved = countryJpaRepository.save(countryEntity);
		return countryServiceMapper.mapCountryEntityToCountry(countryEntitySaved);
	}

	@Override
	public void delete(String code) {
		countryJpaRepository.delete(code);
	}

	public CountryJpaRepository getCountryJpaRepository() {
		return countryJpaRepository;
	}

	public void setCountryJpaRepository(CountryJpaRepository countryJpaRepository) {
		this.countryJpaRepository = countryJpaRepository;
	}

	public CountryServiceMapper getCountryServiceMapper() {
		return countryServiceMapper;
	}

	public void setCountryServiceMapper(CountryServiceMapper countryServiceMapper) {
		this.countryServiceMapper = countryServiceMapper;
	}

}
