/*
 * Created on 3 avr. 2014 ( Time 19:39:43 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.Review;
import org.demo.bean.jpa.ReviewEntity;
import org.demo.bean.jpa.ReviewEntityKey;
import java.util.Date;
import org.demo.business.service.ReviewService;
import org.demo.business.service.mapping.ReviewServiceMapper;
import org.demo.data.repository.jpa.ReviewJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ReviewService
 */
@Component
@Transactional
public class ReviewServiceImpl implements ReviewService {

	@Resource
	private ReviewJpaRepository reviewJpaRepository;

	@Resource
	private ReviewServiceMapper reviewServiceMapper;
	
	@Override
	public Review findById(String customerCode, Integer bookId) {
		ReviewEntityKey id = new ReviewEntityKey(customerCode, bookId);
		ReviewEntity reviewEntity = reviewJpaRepository.findOne(id);
		return reviewServiceMapper.mapReviewEntityToReview(reviewEntity);
	}

	@Override
	public List<Review> findAll() {
		Iterable<ReviewEntity> entities = reviewJpaRepository.findAll();
		List<Review> beans = new ArrayList<Review>();
		for(ReviewEntity reviewEntity : entities) {
			beans.add(reviewServiceMapper.mapReviewEntityToReview(reviewEntity));
		}
		return beans;
	}

	@Override
	public Review save(Review review) {
		return update(review) ;
	}

	@Override
	public Review create(Review review) {
		ReviewEntityKey id = new ReviewEntityKey(review.getCustomerCode(), review.getBookId());
		ReviewEntity reviewEntity = reviewJpaRepository.findOne(id);
		if( reviewEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		reviewEntity = new ReviewEntity();
		reviewServiceMapper.mapReviewToReviewEntity(review, reviewEntity);
		ReviewEntity reviewEntitySaved = reviewJpaRepository.save(reviewEntity);
		return reviewServiceMapper.mapReviewEntityToReview(reviewEntitySaved);
	}

	@Override
	public Review update(Review review) {
		ReviewEntityKey id = new ReviewEntityKey(review.getCustomerCode(), review.getBookId());
		ReviewEntity reviewEntity = reviewJpaRepository.findOne(id);
		reviewServiceMapper.mapReviewToReviewEntity(review, reviewEntity);
		ReviewEntity reviewEntitySaved = reviewJpaRepository.save(reviewEntity);
		return reviewServiceMapper.mapReviewEntityToReview(reviewEntitySaved);
	}

	@Override
	public void delete(String customerCode, Integer bookId) {
		ReviewEntityKey id = new ReviewEntityKey(customerCode, bookId);
		reviewJpaRepository.delete(id);
	}

	public ReviewJpaRepository getReviewJpaRepository() {
		return reviewJpaRepository;
	}

	public void setReviewJpaRepository(ReviewJpaRepository reviewJpaRepository) {
		this.reviewJpaRepository = reviewJpaRepository;
	}

	public ReviewServiceMapper getReviewServiceMapper() {
		return reviewServiceMapper;
	}

	public void setReviewServiceMapper(ReviewServiceMapper reviewServiceMapper) {
		this.reviewServiceMapper = reviewServiceMapper;
	}

}
