/*
 * Created on 3 avr. 2014 ( Time 19:39:43 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.Shop;
import org.demo.bean.jpa.ShopEntity;
import java.util.List;
import org.demo.business.service.ShopService;
import org.demo.business.service.mapping.ShopServiceMapper;
import org.demo.data.repository.jpa.ShopJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ShopService
 */
@Component
@Transactional
public class ShopServiceImpl implements ShopService {

	@Resource
	private ShopJpaRepository shopJpaRepository;

	@Resource
	private ShopServiceMapper shopServiceMapper;
	
	@Override
	public Shop findById(String code) {
		ShopEntity shopEntity = shopJpaRepository.findOne(code);
		return shopServiceMapper.mapShopEntityToShop(shopEntity);
	}

	@Override
	public List<Shop> findAll() {
		Iterable<ShopEntity> entities = shopJpaRepository.findAll();
		List<Shop> beans = new ArrayList<Shop>();
		for(ShopEntity shopEntity : entities) {
			beans.add(shopServiceMapper.mapShopEntityToShop(shopEntity));
		}
		return beans;
	}

	@Override
	public Shop save(Shop shop) {
		return update(shop) ;
	}

	@Override
	public Shop create(Shop shop) {
		ShopEntity shopEntity = shopJpaRepository.findOne(shop.getCode());
		if( shopEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		shopEntity = new ShopEntity();
		shopServiceMapper.mapShopToShopEntity(shop, shopEntity);
		ShopEntity shopEntitySaved = shopJpaRepository.save(shopEntity);
		return shopServiceMapper.mapShopEntityToShop(shopEntitySaved);
	}

	@Override
	public Shop update(Shop shop) {
		ShopEntity shopEntity = shopJpaRepository.findOne(shop.getCode());
		shopServiceMapper.mapShopToShopEntity(shop, shopEntity);
		ShopEntity shopEntitySaved = shopJpaRepository.save(shopEntity);
		return shopServiceMapper.mapShopEntityToShop(shopEntitySaved);
	}

	@Override
	public void delete(String code) {
		shopJpaRepository.delete(code);
	}

	public ShopJpaRepository getShopJpaRepository() {
		return shopJpaRepository;
	}

	public void setShopJpaRepository(ShopJpaRepository shopJpaRepository) {
		this.shopJpaRepository = shopJpaRepository;
	}

	public ShopServiceMapper getShopServiceMapper() {
		return shopServiceMapper;
	}

	public void setShopServiceMapper(ShopServiceMapper shopServiceMapper) {
		this.shopServiceMapper = shopServiceMapper;
	}

}
