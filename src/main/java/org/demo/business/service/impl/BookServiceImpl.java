/*
 * Created on 3 avr. 2014 ( Time 19:39:42 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.Book;
import org.demo.bean.jpa.BookEntity;
import java.math.BigDecimal;
import java.util.List;
import org.demo.business.service.BookService;
import org.demo.business.service.mapping.BookServiceMapper;
import org.demo.data.repository.jpa.BookJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of BookService
 */
@Component
@Transactional
public class BookServiceImpl implements BookService {

	@Resource
	private BookJpaRepository bookJpaRepository;

	@Resource
	private BookServiceMapper bookServiceMapper;
	
	@Override
	public Book findById(Integer id) {
		BookEntity bookEntity = bookJpaRepository.findOne(id);
		return bookServiceMapper.mapBookEntityToBook(bookEntity);
	}

	@Override
	public List<Book> findAll() {
		Iterable<BookEntity> entities = bookJpaRepository.findAll();
		List<Book> beans = new ArrayList<Book>();
		for(BookEntity bookEntity : entities) {
			beans.add(bookServiceMapper.mapBookEntityToBook(bookEntity));
		}
		return beans;
	}

	@Override
	public Book save(Book book) {
		return update(book) ;
	}

	@Override
	public Book create(Book book) {
		BookEntity bookEntity = bookJpaRepository.findOne(book.getId());
		if( bookEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		bookEntity = new BookEntity();
		bookServiceMapper.mapBookToBookEntity(book, bookEntity);
		BookEntity bookEntitySaved = bookJpaRepository.save(bookEntity);
		return bookServiceMapper.mapBookEntityToBook(bookEntitySaved);
	}

	@Override
	public Book update(Book book) {
		BookEntity bookEntity = bookJpaRepository.findOne(book.getId());
		bookServiceMapper.mapBookToBookEntity(book, bookEntity);
		BookEntity bookEntitySaved = bookJpaRepository.save(bookEntity);
		return bookServiceMapper.mapBookEntityToBook(bookEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		bookJpaRepository.delete(id);
	}

	public BookJpaRepository getBookJpaRepository() {
		return bookJpaRepository;
	}

	public void setBookJpaRepository(BookJpaRepository bookJpaRepository) {
		this.bookJpaRepository = bookJpaRepository;
	}

	public BookServiceMapper getBookServiceMapper() {
		return bookServiceMapper;
	}

	public void setBookServiceMapper(BookServiceMapper bookServiceMapper) {
		this.bookServiceMapper = bookServiceMapper;
	}

}
