/*
 * Created on 3 avr. 2014 ( Time 19:39:42 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.Employee;
import org.demo.bean.jpa.EmployeeEntity;
import java.util.List;
import org.demo.business.service.EmployeeService;
import org.demo.business.service.mapping.EmployeeServiceMapper;
import org.demo.data.repository.jpa.EmployeeJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of EmployeeService
 */
@Component
@Transactional
public class EmployeeServiceImpl implements EmployeeService {

	@Resource
	private EmployeeJpaRepository employeeJpaRepository;

	@Resource
	private EmployeeServiceMapper employeeServiceMapper;
	
	@Override
	public Employee findById(String code) {
		EmployeeEntity employeeEntity = employeeJpaRepository.findOne(code);
		return employeeServiceMapper.mapEmployeeEntityToEmployee(employeeEntity);
	}

	@Override
	public List<Employee> findAll() {
		Iterable<EmployeeEntity> entities = employeeJpaRepository.findAll();
		List<Employee> beans = new ArrayList<Employee>();
		for(EmployeeEntity employeeEntity : entities) {
			beans.add(employeeServiceMapper.mapEmployeeEntityToEmployee(employeeEntity));
		}
		return beans;
	}

	@Override
	public Employee save(Employee employee) {
		return update(employee) ;
	}

	@Override
	public Employee create(Employee employee) {
		EmployeeEntity employeeEntity = employeeJpaRepository.findOne(employee.getCode());
		if( employeeEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		employeeEntity = new EmployeeEntity();
		employeeServiceMapper.mapEmployeeToEmployeeEntity(employee, employeeEntity);
		EmployeeEntity employeeEntitySaved = employeeJpaRepository.save(employeeEntity);
		return employeeServiceMapper.mapEmployeeEntityToEmployee(employeeEntitySaved);
	}

	@Override
	public Employee update(Employee employee) {
		EmployeeEntity employeeEntity = employeeJpaRepository.findOne(employee.getCode());
		employeeServiceMapper.mapEmployeeToEmployeeEntity(employee, employeeEntity);
		EmployeeEntity employeeEntitySaved = employeeJpaRepository.save(employeeEntity);
		return employeeServiceMapper.mapEmployeeEntityToEmployee(employeeEntitySaved);
	}

	@Override
	public void delete(String code) {
		employeeJpaRepository.delete(code);
	}

	public EmployeeJpaRepository getEmployeeJpaRepository() {
		return employeeJpaRepository;
	}

	public void setEmployeeJpaRepository(EmployeeJpaRepository employeeJpaRepository) {
		this.employeeJpaRepository = employeeJpaRepository;
	}

	public EmployeeServiceMapper getEmployeeServiceMapper() {
		return employeeServiceMapper;
	}

	public void setEmployeeServiceMapper(EmployeeServiceMapper employeeServiceMapper) {
		this.employeeServiceMapper = employeeServiceMapper;
	}

}
