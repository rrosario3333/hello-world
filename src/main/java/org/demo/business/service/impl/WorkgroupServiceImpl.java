/*
 * Created on 3 avr. 2014 ( Time 19:39:43 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.Workgroup;
import org.demo.bean.jpa.WorkgroupEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.WorkgroupService;
import org.demo.business.service.mapping.WorkgroupServiceMapper;
import org.demo.data.repository.jpa.WorkgroupJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of WorkgroupService
 */
@Component
@Transactional
public class WorkgroupServiceImpl implements WorkgroupService {

	@Resource
	private WorkgroupJpaRepository workgroupJpaRepository;

	@Resource
	private WorkgroupServiceMapper workgroupServiceMapper;
	
	@Override
	public Workgroup findById(Short id) {
		WorkgroupEntity workgroupEntity = workgroupJpaRepository.findOne(id);
		return workgroupServiceMapper.mapWorkgroupEntityToWorkgroup(workgroupEntity);
	}

	@Override
	public List<Workgroup> findAll() {
		Iterable<WorkgroupEntity> entities = workgroupJpaRepository.findAll();
		List<Workgroup> beans = new ArrayList<Workgroup>();
		for(WorkgroupEntity workgroupEntity : entities) {
			beans.add(workgroupServiceMapper.mapWorkgroupEntityToWorkgroup(workgroupEntity));
		}
		return beans;
	}

	@Override
	public Workgroup save(Workgroup workgroup) {
		return update(workgroup) ;
	}

	@Override
	public Workgroup create(Workgroup workgroup) {
		WorkgroupEntity workgroupEntity = workgroupJpaRepository.findOne(workgroup.getId());
		if( workgroupEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		workgroupEntity = new WorkgroupEntity();
		workgroupServiceMapper.mapWorkgroupToWorkgroupEntity(workgroup, workgroupEntity);
		WorkgroupEntity workgroupEntitySaved = workgroupJpaRepository.save(workgroupEntity);
		return workgroupServiceMapper.mapWorkgroupEntityToWorkgroup(workgroupEntitySaved);
	}

	@Override
	public Workgroup update(Workgroup workgroup) {
		WorkgroupEntity workgroupEntity = workgroupJpaRepository.findOne(workgroup.getId());
		workgroupServiceMapper.mapWorkgroupToWorkgroupEntity(workgroup, workgroupEntity);
		WorkgroupEntity workgroupEntitySaved = workgroupJpaRepository.save(workgroupEntity);
		return workgroupServiceMapper.mapWorkgroupEntityToWorkgroup(workgroupEntitySaved);
	}

	@Override
	public void delete(Short id) {
		workgroupJpaRepository.delete(id);
	}

	public WorkgroupJpaRepository getWorkgroupJpaRepository() {
		return workgroupJpaRepository;
	}

	public void setWorkgroupJpaRepository(WorkgroupJpaRepository workgroupJpaRepository) {
		this.workgroupJpaRepository = workgroupJpaRepository;
	}

	public WorkgroupServiceMapper getWorkgroupServiceMapper() {
		return workgroupServiceMapper;
	}

	public void setWorkgroupServiceMapper(WorkgroupServiceMapper workgroupServiceMapper) {
		this.workgroupServiceMapper = workgroupServiceMapper;
	}

}
