/*
 * Created on 3 avr. 2014 ( Time 19:39:43 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.demo.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.demo.bean.Shop;
import org.demo.bean.jpa.ShopEntity;
import org.demo.bean.jpa.EmployeeEntity;
import org.demo.bean.jpa.CountryEntity;
import org.demo.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class ShopServiceMapperTest {

	private ShopServiceMapper shopServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		shopServiceMapper = new ShopServiceMapper();
		shopServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'ShopEntity' to 'Shop'
	 * @param shopEntity
	 */
	@Test
	public void testMapShopEntityToShop() {
		// Given
		ShopEntity shopEntity = new ShopEntity();
		shopEntity.setName(mockValues.nextString(80));
		shopEntity.setAddress1(mockValues.nextString(80));
		shopEntity.setAddress2(mockValues.nextString(80));
		shopEntity.setZipCode(mockValues.nextInteger());
		shopEntity.setCity(mockValues.nextString(45));
		shopEntity.setPhone(mockValues.nextString(14));
		shopEntity.setEmail(mockValues.nextString(50));
		shopEntity.setEmployee(new EmployeeEntity());
		shopEntity.getEmployee().setCode(mockValues.nextString(4));
		shopEntity.setCountry(new CountryEntity());
		shopEntity.getCountry().setCode(mockValues.nextString(2));
		
		// When
		Shop shop = shopServiceMapper.mapShopEntityToShop(shopEntity);
		
		// Then
		assertEquals(shopEntity.getName(), shop.getName());
		assertEquals(shopEntity.getAddress1(), shop.getAddress1());
		assertEquals(shopEntity.getAddress2(), shop.getAddress2());
		assertEquals(shopEntity.getZipCode(), shop.getZipCode());
		assertEquals(shopEntity.getCity(), shop.getCity());
		assertEquals(shopEntity.getPhone(), shop.getPhone());
		assertEquals(shopEntity.getEmail(), shop.getEmail());
		assertEquals(shopEntity.getEmployee().getCode(), shop.getExecutive());
		assertEquals(shopEntity.getCountry().getCode(), shop.getCountryCode());
	}
	
	/**
	 * Test : Mapping from 'Shop' to 'ShopEntity'
	 */
	@Test
	public void testMapShopToShopEntity() {
		// Given
		Shop shop = new Shop();
		shop.setName(mockValues.nextString(80));
		shop.setAddress1(mockValues.nextString(80));
		shop.setAddress2(mockValues.nextString(80));
		shop.setZipCode(mockValues.nextInteger());
		shop.setCity(mockValues.nextString(45));
		shop.setPhone(mockValues.nextString(14));
		shop.setEmail(mockValues.nextString(50));
		shop.setExecutive(mockValues.nextString(4));
		shop.setCountryCode(mockValues.nextString(2));

		ShopEntity shopEntity = new ShopEntity();
		
		// When
		shopServiceMapper.mapShopToShopEntity(shop, shopEntity);
		
		// Then
		assertEquals(shop.getName(), shopEntity.getName());
		assertEquals(shop.getAddress1(), shopEntity.getAddress1());
		assertEquals(shop.getAddress2(), shopEntity.getAddress2());
		assertEquals(shop.getZipCode(), shopEntity.getZipCode());
		assertEquals(shop.getCity(), shopEntity.getCity());
		assertEquals(shop.getPhone(), shopEntity.getPhone());
		assertEquals(shop.getEmail(), shopEntity.getEmail());
		assertEquals(shop.getExecutive(), shopEntity.getEmployee().getCode());
		assertEquals(shop.getCountryCode(), shopEntity.getCountry().getCode());
	}

}